// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/btc_legacy_go_wallet/wallet.proto

package btc_legacy_go_wallet

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Mnemonic             string   `protobuf:"bytes,2,opt,name=Mnemonic,proto3" json:"Mnemonic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_aceae7d5bc629778, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Request) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

type Response struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PubKey               string   `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	PrivKey              string   `protobuf:"bytes,3,opt,name=PrivKey,proto3" json:"PrivKey,omitempty"`
	Mnemonic             string   `protobuf:"bytes,4,opt,name=Mnemonic,proto3" json:"Mnemonic,omitempty"`
	Balance              int64    `protobuf:"varint,5,opt,name=Balance,proto3" json:"Balance,omitempty"`
	TotalReceived        int64    `protobuf:"varint,6,opt,name=TotalReceived,proto3" json:"TotalReceived,omitempty"`
	TotalSent            int64    `protobuf:"varint,7,opt,name=TotalSent,proto3" json:"TotalSent,omitempty"`
	UnconfirmedBalance   int64    `protobuf:"varint,8,opt,name=UnconfirmedBalance,proto3" json:"UnconfirmedBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_aceae7d5bc629778, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Response) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *Response) GetPrivKey() string {
	if m != nil {
		return m.PrivKey
	}
	return ""
}

func (m *Response) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *Response) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Response) GetTotalReceived() int64 {
	if m != nil {
		return m.TotalReceived
	}
	return 0
}

func (m *Response) GetTotalSent() int64 {
	if m != nil {
		return m.TotalSent
	}
	return 0
}

func (m *Response) GetUnconfirmedBalance() int64 {
	if m != nil {
		return m.UnconfirmedBalance
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "go.microservice.btc_legacy_go_wallet.Request")
	proto.RegisterType((*Response)(nil), "go.microservice.btc_legacy_go_wallet.Response")
}

func init() {
	proto.RegisterFile("proto/btc_legacy_go_wallet/wallet.proto", fileDescriptor_aceae7d5bc629778)
}

var fileDescriptor_aceae7d5bc629778 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xdd, 0xa6, 0xdd, 0xf6, 0xd0, 0x83, 0x39, 0x48, 0x19, 0x1e, 0xc6, 0x18, 0xb8, 0x8b,
	0x19, 0xe8, 0x1f, 0x20, 0x6e, 0x87, 0x21, 0x22, 0x8c, 0xaa, 0x08, 0x5e, 0x46, 0x9a, 0x3e, 0xbb,
	0x60, 0x9a, 0xcc, 0x34, 0x9d, 0xec, 0xe6, 0x1f, 0xe8, 0x1f, 0x25, 0x4b, 0x5b, 0x65, 0x50, 0x65,
	0x17, 0x77, 0x0a, 0xdf, 0xfb, 0xbe, 0x2f, 0x3f, 0xc8, 0x23, 0x70, 0xb6, 0x30, 0xda, 0xea, 0x61,
	0x68, 0xf9, 0x4c, 0x62, 0xcc, 0xf8, 0x6a, 0x16, 0xeb, 0xd9, 0x3b, 0x93, 0x12, 0xed, 0x30, 0x3f,
	0xa8, 0x4b, 0x90, 0x7e, 0xac, 0x69, 0x22, 0xb8, 0xd1, 0x29, 0x9a, 0xa5, 0xe0, 0x48, 0xab, 0x2a,
	0xbd, 0x2b, 0x68, 0x06, 0xf8, 0x96, 0x61, 0x6a, 0x89, 0x0f, 0xcd, 0xeb, 0x28, 0x32, 0x98, 0xa6,
	0x7e, 0xad, 0x5b, 0x1b, 0xb4, 0x83, 0x52, 0x92, 0x0e, 0xb4, 0xee, 0x14, 0x26, 0x5a, 0x09, 0xee,
	0xd7, 0x9d, 0xf5, 0xad, 0x7b, 0x1f, 0x75, 0x68, 0x05, 0x98, 0x2e, 0xb4, 0x4a, 0xf1, 0x8f, 0x2b,
	0x4e, 0xc0, 0x9b, 0x66, 0xe1, 0x2d, 0xae, 0x8a, 0x0b, 0x0a, 0xb5, 0x6e, 0x4c, 0x8d, 0x58, 0xae,
	0x8d, 0x46, 0xde, 0x28, 0xe4, 0x06, 0x74, 0x7f, 0x13, 0xba, 0x6e, 0x8d, 0x98, 0x64, 0x8a, 0xa3,
	0x7f, 0xd0, 0xad, 0x0d, 0x1a, 0x41, 0x29, 0x49, 0x1f, 0x8e, 0x1e, 0xb4, 0x65, 0x32, 0x40, 0x8e,
	0x62, 0x89, 0x91, 0xef, 0x39, 0x7f, 0x73, 0x48, 0x4e, 0xa1, 0xed, 0x06, 0xf7, 0xa8, 0xac, 0xdf,
	0x74, 0x89, 0x9f, 0x01, 0xa1, 0x40, 0x1e, 0x15, 0xd7, 0xea, 0x45, 0x98, 0x04, 0xa3, 0x12, 0xd4,
	0x72, 0xb1, 0x0a, 0xe7, 0xe2, 0xb3, 0x01, 0xde, 0x93, 0x7b, 0x4e, 0xa2, 0xe1, 0x70, 0x6c, 0x90,
	0x59, 0x2c, 0xf4, 0x39, 0xdd, 0x66, 0x0b, 0xb4, 0x58, 0x41, 0x87, 0x6e, 0x1b, 0xcf, 0xdf, 0xbb,
	0xb7, 0x47, 0x2c, 0x1c, 0xe7, 0xc0, 0xf1, 0x5c, 0xc8, 0x68, 0x57, 0x54, 0x09, 0xed, 0x09, 0xda,
	0x5d, 0xd1, 0x12, 0x80, 0x09, 0xda, 0x72, 0xc3, 0xff, 0x8d, 0x1b, 0xdd, 0x3c, 0x4f, 0x62, 0x61,
	0xe7, 0x59, 0x48, 0xb9, 0x4e, 0x86, 0x09, 0x33, 0xf8, 0x6a, 0x32, 0x6b, 0x15, 0x9a, 0xea, 0x5f,
	0xf7, 0xfb, 0x87, 0x0c, 0x3d, 0xe7, 0x5d, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x63, 0x6f, 0x15,
	0xdf, 0xb5, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletClient is the client API for Wallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletClient interface {
	CreateWallet(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	CreateChildWallet(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	GetWallet(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	GetBalance(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type walletClient struct {
	cc *grpc.ClientConn
}

func NewWalletClient(cc *grpc.ClientConn) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) CreateWallet(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/go.microservice.btc_legacy_go_wallet.Wallet/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) CreateChildWallet(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/go.microservice.btc_legacy_go_wallet.Wallet/CreateChildWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetWallet(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/go.microservice.btc_legacy_go_wallet.Wallet/GetWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) GetBalance(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/go.microservice.btc_legacy_go_wallet.Wallet/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServer is the server API for Wallet service.
type WalletServer interface {
	CreateWallet(context.Context, *Request) (*Response, error)
	CreateChildWallet(context.Context, *Request) (*Response, error)
	GetWallet(context.Context, *Request) (*Response, error)
	GetBalance(context.Context, *Request) (*Response, error)
}

// UnimplementedWalletServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServer struct {
}

func (*UnimplementedWalletServer) CreateWallet(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWallet not implemented")
}
func (*UnimplementedWalletServer) CreateChildWallet(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChildWallet not implemented")
}
func (*UnimplementedWalletServer) GetWallet(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWallet not implemented")
}
func (*UnimplementedWalletServer) GetBalance(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.microservice.btc_legacy_go_wallet.Wallet/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).CreateWallet(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_CreateChildWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).CreateChildWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.microservice.btc_legacy_go_wallet.Wallet/CreateChildWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).CreateChildWallet(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.microservice.btc_legacy_go_wallet.Wallet/GetWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetWallet(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.microservice.btc_legacy_go_wallet.Wallet/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetBalance(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.microservice.btc_legacy_go_wallet.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWallet",
			Handler:    _Wallet_CreateWallet_Handler,
		},
		{
			MethodName: "CreateChildWallet",
			Handler:    _Wallet_CreateChildWallet_Handler,
		},
		{
			MethodName: "GetWallet",
			Handler:    _Wallet_GetWallet_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Wallet_GetBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/btc_legacy_go_wallet/wallet.proto",
}
